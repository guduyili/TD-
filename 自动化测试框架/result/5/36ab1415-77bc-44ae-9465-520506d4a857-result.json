{"name": "test_attach_photo", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [WinError 2] 系统找不到指定的文件。", "trace": "def test_attach_photo():\n>       allure.attach.file(\"test.jpg\",attachment_type=allure.attachment_type.JPG)\n\ntest_allure_attach.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python 3.12.4\\Lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python 3.12.4\\Lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\nD:\\python 3.12.4\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python 3.12.4\\Lib\\site-packages\\allure_pytest\\listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python 3.12.4\\Lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nD:\\python 3.12.4\\Lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\nD:\\python 3.12.4\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python 3.12.4\\Lib\\site-packages\\allure_commons\\logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'test.jpg', dst = WindowsPath('D:/PYPro/Py_Td/自动化测试框架/result/5/b3852e3a-2aa0-451e-a58d-7bf06666b0df-attachment.jpg')\n\n    def copy2(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data and metadata. Return the file's destination.\n    \n        Metadata is copied with copystat(). Please see the copystat function\n        for more information.\n    \n        The destination may be a directory.\n    \n        If follow_symlinks is false, symlinks won't be followed. This\n        resembles GNU's \"cp -P src dst\".\n        \"\"\"\n        if os.path.isdir(dst):\n            dst = os.path.join(dst, os.path.basename(src))\n    \n        if hasattr(_winapi, \"CopyFile2\"):\n            src_ = os.fsdecode(src)\n            dst_ = os.fsdecode(dst)\n            flags = _winapi.COPY_FILE_ALLOW_DECRYPTED_DESTINATION # for compat\n            if not follow_symlinks:\n                flags |= _winapi.COPY_FILE_COPY_SYMLINK\n            try:\n>               _winapi.CopyFile2(src_, dst_, flags)\nE               FileNotFoundError: [WinError 2] 系统找不到指定的文件。\n\nD:\\python 3.12.4\\Lib\\shutil.py:460: FileNotFoundError"}, "attachments": [{"source": "b3852e3a-2aa0-451e-a58d-7bf06666b0df-attachment.jpg", "type": "image/jpg"}], "start": 1731640756504, "stop": 1731640756509, "uuid": "f13e2f32-ec71-40ad-b977-11822342056a", "historyId": "e235fb82e635004e992ab7f3c672a67f", "testCaseId": "e235fb82e635004e992ab7f3c672a67f", "fullName": "test_allure_attach#test_attach_photo", "labels": [{"name": "suite", "value": "test_allure_attach"}, {"name": "host", "value": "孤独二里"}, {"name": "thread", "value": "9012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_allure_attach"}]}